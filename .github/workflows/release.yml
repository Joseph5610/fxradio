name: Create Release
on:
    push:
      tags:
        - 'v*'
jobs:
    prepareRelease:
        if: startsWith(github.ref, 'refs/tags/')
        name: Prepare Release
        runs-on: macos-11
        # Map a step output to a job output
        outputs:
            uploadUrl: ${{ steps.create_release.outputs.upload_url }}
        steps:
            - name: Release Changelog Builder
              id: build_changelog
              uses: mikepenz/release-changelog-builder-action@v4
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                 commitMode: true
            - name: Create new Github Release
              id: create_release
              uses: comnoco/create-release-action@v2.0.5
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  body: ${{steps.build_changelog.outputs.changelog}}
                  draft: false
                  prerelease: false
    build:
        if: startsWith(github.ref, 'refs/tags/')
        name: Build macOS Release
        runs-on: macos-11
        needs:
            - prepareRelease
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '20'
                  java-package: jdk
            - run: ./gradlew -i jfxNative
            - name: Find DMG file on filesystem
              id: find-dmg
              run: echo "DMG_PATH=$(find . -name "*.dmg")" >> $GITHUB_ENV
            - name: Upload Release DMG
              id: upload-release-dmg
              uses: shogo82148/actions-upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{needs.prepareRelease.outputs.uploadUrl}}
                  asset_path: ${{ env.DMG_PATH }}
                  asset_name: fxradio_macOS.dmg
                  asset_content_type: application/octet-stream
    buildwin:
        if: startsWith(github.ref, 'refs/tags/')
        name: Build Windows Release
        runs-on: windows-latest
        needs:
            - prepareRelease
        steps:
            - uses: actions/checkout@v3
            - run: echo "C:\Program Files (x86)\WiX Toolset v3.11\bin" >> $GITHUB_PATH
              shell: bash
            - uses: actions/setup-java@v3
              with:
                  distribution: 'temurin'
                  java-version: '20'
                  java-package: jdk
            - run: ./gradlew -i jfxNative
            - name: Find MSI file on filesystem
              id: find-msi
              run: echo "MSI_PATH=$(Get-ChildItem -path D:\ -recurse -include "FXRadio_*.msi" | Select -ExpandProperty FullName)" >> $env:GITHUB_ENV
            - name: Upload Release MSI
              id: upload-release-msi
              uses: shogo82148/actions-upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{needs.prepareRelease.outputs.uploadUrl}}
                  asset_path: ${{ env.MSI_PATH }}
                  asset_name: fxradio_windows.msi
                  asset_content_type: application/octet-stream